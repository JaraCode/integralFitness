:javascript
  $(document).on('turbolinks:load', function() {
    var divLine = document.getElementById("line-chart");
    new Chart(divLine.getContext("2d"), {
      type: 'line',
      data: {
        labels: JSON.parse(divLine.dataset.date),
        datasets: [{
            data: JSON.parse(divLine.dataset.weight),
            label: "Peso Total",
            borderColor: "#3cba9f",
            /* backgroundColor: "#3cba9f" */
            fill: true
          }, {
            data: JSON.parse(divLine.dataset.lean),
            label: "Masa Magra",
            borderColor: "#8e5ea2",
            fill: false
          },{
            data: JSON.parse(divLine.dataset.fat),
            label: "Masa Grasa",
            borderColor: "#3e95cd",
            fill: false,
            borderDash: [5, 5]

          }]
      },
      options: {
        animation: {
          onComplete: function ()  {
              var ctx = this.chart.ctx;
              ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontFamily, 'normal', Chart.defaults.global.defaultFontFamily);
              ctx.fillStyle = "black";
              ctx.textAlign = 'center';
              ctx.textBaseline = 'bottom';

              this.data.datasets.forEach(function (dataset)
              {
                  for (var i = 0; i < dataset.data.length; i++) {
                      for(var key in dataset._meta)
                      {
                          var model = dataset._meta[key].data[i]._model;
                          ctx.fillText(dataset.data[i] + "kg", model.x, model.y - 5);
                      }
                  }
              });
          }
        },
        title: {
          display: true,
          responsive: true,
          text: 'Historico Asesorado'
        }
      }
    });

    var divPolar = document.getElementById("polar-chart");

    var fatMass = document.getElementById("now_fat_mass").textContent;
    var muscleMass = document.getElementById("now_muscle_mass").textContent;
    var skeletalMass = document.getElementById("now_skeletal_mass").textContent;
    var residualMass = document.getElementById("now_residual_mass").textContent;
    var total_mass = [fatMass, muscleMass, skeletalMass, residualMass];
    new Chart(divPolar.getContext("2d"), {
        type: 'pie',
        data: {
          labels: ["Masa Grasa", "Masa Muscular", "Masa Ósea", "Masa Residual"],
          datasets: [
            {
              label: "División Peso Total",
              backgroundColor: ["#3e95cd", "#8e5ea2","#c45850","#e8c3b9"],
              data: total_mass
            }
          ]
        },
        options: {
          animation: {
            onComplete: function () {
              var ctx = this.chart.ctx;
              ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontFamily, 'normal', Chart.defaults.global.defaultFontFamily);
              ctx.textAlign = 'center';
              ctx.textBaseline = 'bottom';

              this.data.datasets.forEach(function (dataset) {

                for (var i = 0; i < dataset.data.length; i++) {
                  var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model,
                      total = dataset._meta[Object.keys(dataset._meta)[0]].total,
                      mid_radius = model.innerRadius + (model.outerRadius - model.innerRadius)/2,
                      start_angle = model.startAngle,
                      end_angle = model.endAngle,
                      mid_angle = start_angle + (end_angle - start_angle)/2;

                  var x = mid_radius * Math.cos(mid_angle);
                  var y = mid_radius * Math.sin(mid_angle);

                  ctx.fillStyle = '#fff';
                  if (i == 3){ // Darker text color for lighter background
                    ctx.fillStyle = '#444';
                  }
                  var percent = String(Math.round(dataset.data[i]/total*100)) + "%";
                  //Don't Display If Legend is hide or value is 0
                  if(dataset.data[i] != 0) {
                    ctx.fillText(dataset.data[i] + "kg", model.x + x, model.y + y);
                    // Display percent in another line, line break doesn't work for fillText
                    ctx.fillText(percent, model.x + x, model.y + y + 15);
                  }
                }
              });
              window.print();
            }
         },
          title: {
            display: true,
            responsive: true,
            text: 'División Peso Total'
          }
        }
    });
  })
.container
  .row
    .page-break
      #plan_view
        .center-align
          %h5.card-title
            Resumen del Plan
          %span.card-title
            (
            %small= @plan.created_at.strftime("%d/%m/%g")
            - if !@plan.guest.next.blank?
              \-
              %small= @plan.guest.next&.strftime("%d/%m/%g")
            )
        .row
          .col.s6.m5
            %h5 Info. Asesorado
            .divider
            %br/
            %p
              %b Nombre:
              %span= @plan.guest.name&.titleize
            %p
              %b Email:
              %span= @plan.guest.email&.downcase
            %p
              %b Teléfono:
              %span= @plan.guest.phone
            %p
              %b Altura:
              %span
                = @plan.guest.height
                CM
            %p
              %b Edad:
              %span= @plan.guest.age
            %h5 Información Plan
            %p
              %b Objetivo:
              %span= @plan.goal
            %p
              %b Nivel de Actividad:
              %span= @plan.activity
            %p
              %b Variación Calorica:
              %span
                = @plan.variation
                \%
            %p
              %b Calorías Diarias:
              %span
                = @plan.kcal
                KCALS
              %ul.browser-default
                %li
                  %b Proteinas:
                  %span
                    = @plan.proteins
                    \%
                %li
                  %b Carbohidratos:
                  %span
                    = @plan.carbs
                    \%
                %li
                  %b Grasas:
                  %span
                    = @plan.fats
                    \%
          .col.s6.m5.offset-m1
            %h5 Estadísticas Peso
            .divider
            %p
              %b Peso:
              %span
                = @plan.weight
              %span
                Kg
            %p
              %b Grasa:
              %span
                = @plan.fat
              %span
                \%
            %p
              %b Masa Grasa:
              %span#now_fat_mass
                = @plan.fat_mass
              %span
                Kg
            %p
              %b Masa Magra:
              %span
                = @plan.lean_mass
              %span
                Kg
              %ul.browser-default
                %li
                  %b Masa Muscular:
                  %span#now_muscle_mass
                    = @plan.muscle_mass
                  %span
                    Kg
                %li
                  %b Masa Ósea:
                  %span#now_skeletal_mass
                    = @plan.skeletal_mass
                  %span
                    Kg
                %li
                  %b Masa Residual:
                  %span#now_residual_mass
                    = @plan.residual_mass
                  %span
                    Kg
            - if !@plan.description.blank?
              %b Descripción:
              %p=@plan.description

        .row.valign-wrapper
          %br/
          .col.s12.m6
            %canvas#line-chart{width: "100%", height:"100%", data: { weight: @weights, lean: @lean_mass, fat: @fat_mass, date: @date }}
          .col.s12.m6
            %canvas#polar-chart{width: "100%", height:"100%"}
    .page-break
      #food_print
        %br/
        %br/
        .center-align
          %h5.card-title
            Plan Alimentario
        %table.centered.highlight
          %thead
            %th Día
            %th KCALS
            %th Proteinas
            %th Carbohidratos
            %th Grasas
          %tbody
            %tr
              %td Base
              %td= @plan.kcal
              %td
                = @plan.gr_proteins
                gr
              %td
                = @plan.gr_carbs
                gr
              %td
                = @plan.gr_fats
                gr
            - (1..7).each do |i|
              -if @foods_linked.where(:day => i).count != 0
                %tr
                  %td= i
                  %td= @plan.calculate_kcals(i)
                  %td
                    = @plan.calculate_proteins(i)
                    gr
                  %td
                    = @plan.calculate_carbs(i)
                    gr
                  %td
                    = @plan.calculate_fats(i)
                    gr
        -if @foods_linked.count > 0
          %br/
          - (1..7).each do |i|
            -if @foods_linked.where(:day => i).count != 0
              - FoodDay.moments.keys.to_a.each do |momento|
                -if @foods_linked.where(:moment => momento, :day => i).count != 0
                  .row
                    %h5= "#{momento} - Día #{i}"
                    %table
                      %thead
                        %tr
                          %th{width: "25%"} Alimento
                          %th{width: "25%"} Gramos
                          %th{width: "50%"} Descripción
                      %tbody
                      - @foods_linked.where(:moment => momento, :day => i).each do |food_day|
                        %tr
                          %td
                            %p
                              = food_day.food.name.capitalize
                              = (food_day.food.status.blank? ? "" : "( #{food_day.food.status.downcase} )")
                          %td
                            = food_day.weight
                            gr
                          %td= food_day.description.capitalize
    .page-break
      #exercise_print
        %br/
        %br/
        .center-align
          %h5.card-title
            Plan de Entrenamiento
        .divider
        -if @exercises_linked.count > 0
          - (1..15).each do |i|
            -if @exercises_linked.where(:day => i).count != 0
              .row
                %h5= "Día de Ejercicio #{i}"
                %table
                  %thead
                    %tr
                      %th{width: "30%"} Ejercicio
                      %th{width: "60%"} Descripción
                  %tbody
                  - @exercises_linked.where(:day => i).each do |exercise_day|
                    %tr
                      %td
                        = link_to exercise_day.exercise, target: :_blank do
                          %p= exercise_day.exercise.descrizione.capitalize
                      %td= exercise_day.description.capitalize